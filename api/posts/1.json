{"total":13,"pageSize":13,"pageCount":1,"data":[{"title":"Rust Test","uid":"acc0e87b34830b962966d84f538705e6","slug":"rust-test","date":"2025-01-27T02:12:05.000Z","updated":"2025-01-27T09:16:44.512Z","comments":true,"path":"api/articles/rust-test.json","keywords":"","cover":[],"text":"Unit Test单元测试 123456789101112131415161718192021222324252627282930313233343536373...","permalink":"/post/rust-test","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"rust","slug":"rust","count":12,"path":"api/tags/rust.json"}],"author":{"name":"Marnie","slug":"blog-author","avatar":"/images/favicon.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"迭代器 Iterators","uid":"dffe4aa96c5d22cd6989d498cd57fa66","slug":"iterators","date":"2025-01-21T10:15:44.000Z","updated":"2025-01-26T15:38:43.838Z","comments":true,"path":"api/articles/iterators.json","keywords":"","cover":[],"text":"What are iterators?迭代器是 Rust 中用来处理集合的方式，允许遍历和操作序列值。 Iterator TraitIterator Trait...","permalink":"/post/iterators","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"rust","slug":"rust","count":12,"path":"api/tags/rust.json"}],"author":{"name":"Marnie","slug":"blog-author","avatar":"/images/favicon.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"项目和包 Packages and Crates","uid":"eb08d875d225f31121fe8b5a6e855210","slug":"packages_and_crates","date":"2025-01-20T06:25:41.000Z","updated":"2025-01-21T10:16:59.212Z","comments":true,"path":"api/articles/packages_and_crates.json","keywords":"","cover":null,"text":"TODO …","permalink":"/post/packages_and_crates","photos":[],"count_time":{"symbolsCount":6,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"rust","slug":"rust","count":12,"path":"api/tags/rust.json"}],"author":{"name":"Marnie","slug":"blog-author","avatar":"/images/favicon.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"npm_and_pnpm","uid":"b174df949a1c3f84910009414c4b737f","slug":"npm-and-pnpm","date":"2025-01-17T16:47:09.000Z","updated":"2025-01-21T04:29:51.378Z","comments":true,"path":"api/articles/npm-and-pnpm.json","keywords":"","cover":null,"text":"TODO …","permalink":"/post/npm-and-pnpm","photos":[],"count_time":{"symbolsCount":6,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Marnie","slug":"blog-author","avatar":"/images/favicon.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"闭包 Closures","uid":"0e16d47ce0f8c7e02c11662ec70d0b06","slug":"closures","date":"2025-01-16T12:15:31.000Z","updated":"2025-01-21T04:31:42.302Z","comments":true,"path":"api/articles/closures.json","keywords":"","cover":[],"text":"What are Closures?Rust 中的闭包本质是一个匿名函数，它有三个特点： 可以被存储在变量中 可以当做参数传给某个函数 可以当做某个函数的返回值...","permalink":"/post/closures","photos":[],"count_time":{"symbolsCount":"7k","symbolsTime":"6 mins."},"categories":[],"tags":[{"name":"rust","slug":"rust","count":12,"path":"api/tags/rust.json"}],"author":{"name":"Marnie","slug":"blog-author","avatar":"/images/favicon.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"宏 Marcos","uid":"764bca6314ff5edd2be26b3adc313bc1","slug":"marcos","date":"2025-01-13T14:29:24.000Z","updated":"2025-01-15T18:49:58.785Z","comments":true,"path":"api/articles/marcos.json","keywords":"","cover":[],"text":"Declarative macrosWhat is macro_rules!?macro_rules! 用于定义声明式宏（declarative macros）...","permalink":"/post/marcos","photos":[],"count_time":{"symbolsCount":"6.1k","symbolsTime":"6 mins."},"categories":[],"tags":[{"name":"rust","slug":"rust","count":12,"path":"api/tags/rust.json"}],"author":{"name":"Marnie","slug":"blog-author","avatar":"/images/favicon.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"特征 Trait","uid":"bf66738dcbdc4a39018dfff1579fc70a","slug":"trait","date":"2025-01-05T14:56:40.000Z","updated":"2025-01-20T17:13:03.998Z","comments":true,"path":"api/articles/trait.json","keywords":"","cover":[],"text":"孤儿规则impl T for A : 为 A 实现特征 T , 那么 A 或者 T 至少有一个是在当前作用域中定义的。 1234fn main { // ❌ C...","permalink":"/post/trait","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[],"tags":[{"name":"rust","slug":"rust","count":12,"path":"api/tags/rust.json"}],"author":{"name":"Marnie","slug":"blog-author","avatar":"/images/favicon.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"智能指针2 Smart Pointers 2","uid":"9fb78f735ce3a3f25bf1795a347b0649","slug":"smart-pointers-2","date":"2024-12-05T03:36:40.000Z","updated":"2025-01-13T14:30:04.334Z","comments":true,"path":"api/articles/smart-pointers-2.json","keywords":"","cover":[],"text":"Rc 智能指针Rust 所有权机制要求一个值只能有一个所有者，如果出现需要共享数据的情况，也就是说一个数据资源拥有多个所有者，或者说一个资源需要被多个对象引用，...","permalink":"/post/smart-pointers-2","photos":[],"count_time":{"symbolsCount":"6.1k","symbolsTime":"6 mins."},"categories":[],"tags":[{"name":"rust","slug":"rust","count":12,"path":"api/tags/rust.json"}],"author":{"name":"Marnie","slug":"blog-author","avatar":"/images/favicon.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"生命周期 Lifetime","uid":"be46c1c387f4b8a2a5d0ca8494de6c20","slug":"lifetime","date":"2024-12-04T10:16:46.000Z","updated":"2025-01-13T14:29:51.129Z","comments":true,"path":"api/articles/lifetime.json","keywords":"","cover":[],"text":"作用生命周期即指一个变量的有效作用范围，它和 Scope 的概念听起来会有点类似。Scope（作用域）规定了变量能被访问的范围，超出了定义作用域的地方是不能访问...","permalink":"/post/lifetime","photos":[],"count_time":{"symbolsCount":"6.5k","symbolsTime":"6 mins."},"categories":[],"tags":[{"name":"rust","slug":"rust","count":12,"path":"api/tags/rust.json"}],"author":{"name":"Marnie","slug":"blog-author","avatar":"/images/favicon.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"泛型 Generics","uid":"ab26d33d9183b3dac0ad2f16b85bf6b4","slug":"generics","date":"2024-12-02T13:12:41.000Z","updated":"2025-01-13T14:29:48.774Z","comments":true,"path":"api/articles/generics.json","keywords":"","cover":[],"text":"函数中使用泛型泛型是实现让一个功能函数支持不同类型的手段，我们称之为多态。在不支持泛型时，我们可能会写出如下代码： 1234567891011fn add_i3...","permalink":"/post/generics","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"rust","slug":"rust","count":12,"path":"api/tags/rust.json"}],"author":{"name":"Marnie","slug":"blog-author","avatar":"/images/favicon.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"First Project","uid":"3b2621a700dd1210cc1c1a2ba961dd42","slug":"first-project","date":"2024-11-01T08:06:44.000Z","updated":"2025-01-13T14:29:45.597Z","comments":true,"path":"api/articles/first-project.json","keywords":"","cover":null,"text":"Getting Started安装 anchor —— Solana 智能合约框架 1.用 cargo 安装 avm ，Anchor 版本管理器 1cargo ...","permalink":"/post/first-project","photos":[],"count_time":{"symbolsCount":335,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"rust","slug":"rust","count":12,"path":"api/tags/rust.json"}],"author":{"name":"Marnie","slug":"blog-author","avatar":"/images/favicon.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"智能指针 Smart Pointers","uid":"2e2bd34ffcfc46d5575f7c18eed689f5","slug":"smart-pointers","date":"2024-10-24T07:41:13.000Z","updated":"2025-01-13T14:30:07.336Z","comments":true,"path":"api/articles/smart-pointers.json","keywords":"","cover":[],"text":"首先理解，指针是什么？指针是一个存储了内存地址（memory address）的变量，该内存地址引用或者指向了内存中另外的数据。 在 Rust 中最常见的指针就...","permalink":"/post/smart-pointers","photos":[],"count_time":{"symbolsCount":"18k","symbolsTime":"16 mins."},"categories":[],"tags":[{"name":"rust","slug":"rust","count":12,"path":"api/tags/rust.json"}],"author":{"name":"Marnie","slug":"blog-author","avatar":"/images/favicon.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Rust 基础 Rust Basic","uid":"1f5f42bbe18d84ce044c457f49d8e22c","slug":"rust-basic","date":"2024-10-22T16:00:00.000Z","updated":"2025-01-13T14:30:01.520Z","comments":true,"path":"api/articles/rust-basic.json","keywords":"","cover":[],"text":"入门 Getting StartedRust静态类型语言（statically typed）：在编译时就确定了所有表达式的类型 强类型语言（strongly t...","permalink":"/post/rust-basic","photos":[],"count_time":{"symbolsCount":"22k","symbolsTime":"20 mins."},"categories":[],"tags":[{"name":"rust","slug":"rust","count":12,"path":"api/tags/rust.json"}],"author":{"name":"Marnie","slug":"blog-author","avatar":"/images/favicon.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}