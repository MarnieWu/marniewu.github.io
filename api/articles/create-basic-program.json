{"title":"create-basic-program","uid":"6aaea4836c6acb6130648711cb680200","slug":"create-basic-program","date":"2025-03-20T05:42:13.000Z","updated":"2025-03-25T08:18:55.919Z","comments":true,"path":"api/articles/create-basic-program.json","keywords":"","cover":null,"content":"<h2 id=\"Create-A-Basic-Program\"><a href=\"#Create-A-Basic-Program\" class=\"headerlink\" title=\"Create A Basic Program\"></a>Create A Basic Program</h2><ol>\n<li>分别创建 dApp端（client端）和 合约端 目录</li>\n</ol>\n<figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cargo new client</span><br><span class=\"line\">cargo new program</span><br></pre></td></tr></table></figure>\n\n\n\n<ol start=\"2\">\n<li>接下来会同时对两个目录进行功能书写，顺序不定，写一步对一步</li>\n</ol>\n<p>先在 client 仓库下用编写测试代码的方式测试合约功能，首先我们为 client 添加下所需的 dependencies</p>\n<figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cargo add solana-client solana-sdk</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>建立与Solana网络交互的桥梁——RPC</li>\n<li>读取本地 wallet keypair 文件作为此次与链上交互的支付方（payer）</li>\n<li>由 client 端生成 生成 mint_account keypair，用于传给 合约端 进行 创建铸币账户+初始化账户 的操作</li>\n</ul>\n<figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#[test]</span></span><br><span class=\"line\"><span class=\"keyword\">fn</span> <span class=\"title function_\">test_fn</span>() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 建立与Solana网络交互的桥梁——RPC</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">client</span> = RpcClient::<span class=\"title function_ invoke__\">new</span>(<span class=\"string\">&quot;http://127.0.0.1:8899&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 此次链上操作的支付方 为本地密钥对账户</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">payer</span> = <span class=\"title function_ invoke__\">read_to_string</span>(<span class=\"string\">&quot;/Users/wuwenqi/.config/solana/id.json&quot;</span>).<span class=\"title function_ invoke__\">expect</span>(<span class=\"string\">&quot;FAILED&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 生成 mint_account keypair</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">mint</span> = Keypair::<span class=\"title function_ invoke__\">new</span>(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>创建 fn create_mint 用于执行 创建账户和初始化账户 相关的指令</p>\n</li>\n<li><p>构建具体指令，调用 solana_sdk 提供的执行指令的方法，对指令进行调用和传参</p>\n</li>\n<li><p>构建创建mint的指令，指令参数 program_id, accounts 参照该指令对应的合约端对应程序参数进行传递</p>\n</li>\n<li><p>创建合约端对应指令，client端调用执行指令的函数传参需要参照合约端指令接收的参数传入</p>\n<ul>\n<li>合约端只有一个入口函数，我们会定义一个统一的入口处理器以及指令枚举</li>\n<li>指令枚举用于定义各种代币的操作指令及参数</li>\n<li>入口处理器解析指令data来匹配指令枚举，得出具体执行哪个指令函数</li>\n<li>定义指令枚举需要用到内部提供的 Borsh 库自动实现对指令data的序列化反序列化操作，不用手动对数据做处理和解析</li>\n</ul>\n</li>\n<li><p>合约端使用 solana_program::program::invoke 之类的方法执行定义的指令</p>\n</li>\n<li><p>client端通过创建于合约端的通信桥梁——RPC_Client 来创建交易、发送及确认交易实现调用对应的合约端程序</p>\n</li>\n<li><p>合约端会有两个具体指令</p>\n<ul>\n<li>create_mint：用于创建mint账户，及初始化账户</li>\n<li>mint_token：用于token转账</li>\n</ul>\n</li>\n</ul>\n<p><strong>rust program 端 — create_mint</strong></p>\n<figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"title function_\">create_mint</span>(accounts: &amp;[AccountInfo], decimals: <span class=\"type\">u8</span>) <span class=\"punctuation\">-&gt;</span> ProgramResult &#123;</span><br><span class=\"line\">       <span class=\"comment\">// 创建迭代器，用于读取传入的账户列表</span></span><br><span class=\"line\">       <span class=\"keyword\">let</span> <span class=\"variable\">accounts_iter</span> = &amp;<span class=\"keyword\">mut</span> accounts.<span class=\"title function_ invoke__\">iter</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"comment\">// 支付账户</span></span><br><span class=\"line\">       <span class=\"keyword\">let</span> <span class=\"variable\">payer</span> = <span class=\"title function_ invoke__\">next_account_info</span>(accounts_iter)?;</span><br><span class=\"line\">       <span class=\"comment\">// mint账户（代币账户）</span></span><br><span class=\"line\">       <span class=\"keyword\">let</span> <span class=\"variable\">mint_account</span> = <span class=\"title function_ invoke__\">next_account_info</span>(accounts_iter)?;</span><br><span class=\"line\">       <span class=\"comment\">// 拥有铸币权限的账户</span></span><br><span class=\"line\">       <span class=\"keyword\">let</span> <span class=\"variable\">mint_authority</span> = <span class=\"title function_ invoke__\">next_account_info</span>(accounts_iter)?;</span><br><span class=\"line\">       <span class=\"comment\">// 用于存储租金的账户</span></span><br><span class=\"line\">       <span class=\"comment\">// initialize_mint 指令需要这个账户</span></span><br><span class=\"line\">       <span class=\"keyword\">let</span> <span class=\"variable\">sysvar_rent</span> = <span class=\"title function_ invoke__\">next_account_info</span>(accounts_iter)?;</span><br><span class=\"line\">       <span class=\"comment\">// 系统程序，the owner of wallet_account</span></span><br><span class=\"line\">       <span class=\"keyword\">let</span> <span class=\"variable\">system_program</span> = <span class=\"title function_ invoke__\">next_account_info</span>(accounts_iter)?;</span><br><span class=\"line\">       <span class=\"comment\">// 系统程序，负责管理mint_account和token_account，提供了创建和管理这些账户的指令</span></span><br><span class=\"line\">       <span class=\"keyword\">let</span> <span class=\"variable\">token_program</span> = <span class=\"title function_ invoke__\">next_account_info</span>(accounts_iter)?;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"comment\">// mint账户所需空间</span></span><br><span class=\"line\">       <span class=\"keyword\">let</span> <span class=\"variable\">mint_space</span> = Mint::LEN;</span><br><span class=\"line\">       <span class=\"comment\">// 创建mint账户需要的租金</span></span><br><span class=\"line\">       <span class=\"keyword\">let</span> <span class=\"variable\">rent_lamports</span> = Rent::<span class=\"title function_ invoke__\">minimum_balance</span>(&amp;Rent::<span class=\"title function_ invoke__\">default</span>(), mint_space);</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"comment\">// 创建Mint账户</span></span><br><span class=\"line\">       <span class=\"keyword\">let</span> <span class=\"variable\">create_mint_ix</span> = <span class=\"title function_ invoke__\">create_account</span>(</span><br><span class=\"line\">           payer.key,</span><br><span class=\"line\">           mint_account.key,</span><br><span class=\"line\">           rent_lamports,</span><br><span class=\"line\">           mint_space <span class=\"keyword\">as</span> <span class=\"type\">u64</span>,</span><br><span class=\"line\">           <span class=\"comment\">// 该字段owner指的是当前被创建账户的所有者程序，即只有该owner程序才能写入或修改该账户</span></span><br><span class=\"line\">           token_program.key,</span><br><span class=\"line\">       );</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"comment\">// 和当前指令读取账户列表的顺序保持一致</span></span><br><span class=\"line\">       <span class=\"keyword\">let</span> <span class=\"variable\">accounts_info</span> = &amp;[</span><br><span class=\"line\">           payer.<span class=\"title function_ invoke__\">clone</span>(),</span><br><span class=\"line\">           mint_account.<span class=\"title function_ invoke__\">clone</span>(),</span><br><span class=\"line\">           system_program.<span class=\"title function_ invoke__\">clone</span>(),</span><br><span class=\"line\">           token_program.<span class=\"title function_ invoke__\">clone</span>(),</span><br><span class=\"line\">       ];</span><br><span class=\"line\">       _ = <span class=\"title function_ invoke__\">invoke</span>(&amp;create_mint_ix, accounts_info);</span><br><span class=\"line\"></span><br><span class=\"line\">       msg!(<span class=\"string\">&quot;Create mint account successfully!&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"comment\">// 初始化Mint账户</span></span><br><span class=\"line\">       <span class=\"keyword\">let</span> <span class=\"variable\">initialize_mint_ix</span> = <span class=\"title function_ invoke__\">initialize_mint</span>(</span><br><span class=\"line\">           token_program.key,</span><br><span class=\"line\">           mint_account.key,</span><br><span class=\"line\">           mint_authority.key,</span><br><span class=\"line\">           <span class=\"literal\">None</span>,</span><br><span class=\"line\">           decimals,</span><br><span class=\"line\">       );</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"keyword\">match</span> initialize_mint_ix &#123;</span><br><span class=\"line\">           <span class=\"title function_ invoke__\">Ok</span>(ix) =&gt; &#123;</span><br><span class=\"line\">               <span class=\"keyword\">let</span> <span class=\"variable\">accounts_info</span> = &amp;[</span><br><span class=\"line\">                   token_program.<span class=\"title function_ invoke__\">clone</span>(),</span><br><span class=\"line\">                   mint_account.<span class=\"title function_ invoke__\">clone</span>(),</span><br><span class=\"line\">                   mint_authority.<span class=\"title function_ invoke__\">clone</span>(),</span><br><span class=\"line\">                   sysvar_rent.<span class=\"title function_ invoke__\">clone</span>(),</span><br><span class=\"line\">               ];</span><br><span class=\"line\"></span><br><span class=\"line\">               _ = <span class=\"title function_ invoke__\">invoke_signed</span>(&amp;ix, accounts_info, &amp;[]);</span><br><span class=\"line\">               msg!(<span class=\"string\">&quot;Initialize mint account successfully!&quot;</span>);</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           <span class=\"title function_ invoke__\">Err</span>(e) =&gt; &#123;</span><br><span class=\"line\">               msg!(<span class=\"string\">&quot;Intialize mint account failed, &#123;&#125;&quot;</span>, e);</span><br><span class=\"line\">               <span class=\"built_in\">panic!</span>(<span class=\"string\">&quot;Error&quot;</span>)</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">Ok</span>(());</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>rust_client 端 — create_mint</strong></p>\n<figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">fn</span> <span class=\"title function_\">create_mint</span>(</span><br><span class=\"line\">    client: &amp;RpcClient,</span><br><span class=\"line\">    program_id: &amp;Pubkey,</span><br><span class=\"line\">    payer: &amp;Keypair,</span><br><span class=\"line\">    mint_account: &amp;Keypair,</span><br><span class=\"line\">    mint_authority: &amp;Pubkey,</span><br><span class=\"line\">    decimals: <span class=\"type\">u8</span>,</span><br><span class=\"line\">) <span class=\"punctuation\">-&gt;</span> <span class=\"type\">Result</span>&lt;(), <span class=\"type\">Box</span>&lt;<span class=\"keyword\">dyn</span> std::error::Error&gt;&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">accounts</span> = <span class=\"built_in\">vec!</span>[</span><br><span class=\"line\">        <span class=\"comment\">// payer</span></span><br><span class=\"line\">        AccountMeta::<span class=\"title function_ invoke__\">new</span>(payer.<span class=\"title function_ invoke__\">pubkey</span>(), <span class=\"literal\">true</span>),</span><br><span class=\"line\">        <span class=\"comment\">// mint_account</span></span><br><span class=\"line\">        AccountMeta::<span class=\"title function_ invoke__\">new</span>(mint_account.<span class=\"title function_ invoke__\">pubkey</span>(), <span class=\"literal\">true</span>),</span><br><span class=\"line\">        <span class=\"comment\">// mint_authority</span></span><br><span class=\"line\">        AccountMeta::<span class=\"title function_ invoke__\">new_readonly</span>(*mint_authority, <span class=\"literal\">false</span>),</span><br><span class=\"line\">        <span class=\"comment\">// system_rent</span></span><br><span class=\"line\">        AccountMeta::<span class=\"title function_ invoke__\">new_readonly</span>(sysvar::rent::<span class=\"title function_ invoke__\">id</span>(), <span class=\"literal\">false</span>),</span><br><span class=\"line\">        <span class=\"comment\">// system_program</span></span><br><span class=\"line\">        AccountMeta::<span class=\"title function_ invoke__\">new_readonly</span>(system_program::<span class=\"title function_ invoke__\">id</span>(), <span class=\"literal\">false</span>),</span><br><span class=\"line\">        <span class=\"comment\">// token_program</span></span><br><span class=\"line\">        AccountMeta::<span class=\"title function_ invoke__\">new_readonly</span>(spl_token::<span class=\"title function_ invoke__\">id</span>(), <span class=\"literal\">false</span>),</span><br><span class=\"line\">    ];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">instruction_data</span> = borsh::<span class=\"title function_ invoke__\">to_vec</span>(&amp;TokenInstruction::CreateMint &#123; decimals &#125;).<span class=\"title function_ invoke__\">unwrap</span>();</span><br><span class=\"line\">    <span class=\"comment\">// 构建创建mint的指令</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">create_mint_ix</span> = Instruction &#123;</span><br><span class=\"line\">        accounts,</span><br><span class=\"line\">        program_id: *program_id,</span><br><span class=\"line\">        data: instruction_data,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">recent_blockhash</span> = client.<span class=\"title function_ invoke__\">get_latest_blockhash</span>()?;</span><br><span class=\"line\">    <span class=\"comment\">// 创建交易并为其添加指令</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">tx</span> = Transaction::<span class=\"title function_ invoke__\">new_signed_with_payer</span>(</span><br><span class=\"line\">        &amp;[create_mint_ix],</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">Some</span>(&amp;payer.<span class=\"title function_ invoke__\">pubkey</span>()),</span><br><span class=\"line\">        &amp;[payer, mint_account],</span><br><span class=\"line\">        recent_blockhash,</span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 发送和确认交易</span></span><br><span class=\"line\">    <span class=\"keyword\">match</span> client.<span class=\"title function_ invoke__\">send_and_confirm_transaction</span>(&amp;tx) &#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">Ok</span>(sig) =&gt; &#123;</span><br><span class=\"line\">            <span class=\"built_in\">println!</span>(<span class=\"string\">&quot;Mint Address: &#123;&#125;&quot;</span>, mint_account.<span class=\"title function_ invoke__\">pubkey</span>());</span><br><span class=\"line\">            <span class=\"built_in\">println!</span>(<span class=\"string\">&quot;Transaction Signature: &#123;&#125;&quot;</span>, sig);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">Err</span>(e) =&gt; &#123;</span><br><span class=\"line\">            <span class=\"built_in\">eprintln!</span>(<span class=\"string\">&quot;Transaction failed: &#123;:?&#125;&quot;</span>, e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">Ok</span>(());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"https-solana-com-docs-core-cpi-需要理解这篇内容！！\"><a href=\"#https-solana-com-docs-core-cpi-需要理解这篇内容！！\" class=\"headerlink\" title=\"https://solana.com/docs/core/cpi   需要理解这篇内容！！\"></a><a href=\"https://solana.com/docs/core/cpi\">https://solana.com/docs/core/cpi</a>   需要理解这篇内容！！</h3><h2 id=\"Cross-Program-Invocation（CPI）\"><a href=\"#Cross-Program-Invocation（CPI）\" class=\"headerlink\" title=\"Cross Program Invocation（CPI）\"></a>Cross Program Invocation（CPI）</h2><p>CPI 指的是当一个程序调用另一个程序的指令们。这个机制允许Solana程序的可组合性。</p>\n","text":"Create A Basic Program 分别创建 dApp端（client端）和 合约端 目录 12cargo new clientcargo new p...","permalink":"/post/create-basic-program","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"solana","slug":"solana","count":7,"path":"api/tags/solana.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Create-A-Basic-Program\"><span class=\"toc-text\">Create A Basic Program</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#https-solana-com-docs-core-cpi-%E9%9C%80%E8%A6%81%E7%90%86%E8%A7%A3%E8%BF%99%E7%AF%87%E5%86%85%E5%AE%B9%EF%BC%81%EF%BC%81\"><span class=\"toc-text\">https:&#x2F;&#x2F;solana.com&#x2F;docs&#x2F;core&#x2F;cpi   需要理解这篇内容！！</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Cross-Program-Invocation%EF%BC%88CPI%EF%BC%89\"><span class=\"toc-text\">Cross Program Invocation（CPI）</span></a></li></ol>","author":{"name":"Marnie","slug":"blog-author","avatar":"/images/favicon.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"spl-token-contract","uid":"4b5a0f639775a39c3a751526b5f7688f","slug":"spl-token-contract","date":"2025-03-15T03:25:30.000Z","updated":"2025-03-28T12:44:30.236Z","comments":true,"path":"api/articles/spl-token-contract.json","keywords":"","cover":[],"text":"Solana SPL Token 合约简单实现 可参考官方实战案例：https://solana.com/developers/courses/native-o...","permalink":"/post/spl-token-contract","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"solana","slug":"solana","count":7,"path":"api/tags/solana.json"}],"author":{"name":"Marnie","slug":"blog-author","avatar":"/images/favicon.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}