{"title":"solana-accounts","uid":"80ed7c116b6e6514a2ce292980fb566a","slug":"solana-accounts","date":"2025-03-11T17:14:06.000Z","updated":"2025-03-14T05:09:33.598Z","comments":true,"path":"api/articles/solana-accounts.json","keywords":"","cover":[],"content":"<h2 id=\"Solana-Account-Model\"><a href=\"#Solana-Account-Model\" class=\"headerlink\" title=\"Solana Account Model\"></a>Solana Account Model</h2><h2 id=\"Account-Types\"><a href=\"#Account-Types\" class=\"headerlink\" title=\"Account Types\"></a>Account Types</h2><ul>\n<li>数据账户，用来存储数据<ul>\n<li>系统所有账户</li>\n<li>程序派生账户（PDA）</li>\n</ul>\n</li>\n<li>程序账户，用来存储可执行程序</li>\n<li>原生账户，指 Solana 上的原生程序，e.g. <code>System</code>,<code>Stake</code>,<code>Vote</code> …</li>\n</ul>\n<h2 id=\"Key-Points\"><a href=\"#Key-Points\" class=\"headerlink\" title=\"Key Points\"></a>Key Points</h2><ul>\n<li>账户是用来存放数据的</li>\n<li>每个账户都有一个独一无二的地址（<code>public_key</code>）</li>\n<li>每个账户大小不能超过 10MB（<code>space</code>）</li>\n<li>账户大小是静态的</li>\n<li>账户数据存储需要付租金（<code>rent_epoch</code>）</li>\n<li>默认的账户所有者是“系统程序”</li>\n</ul>\n<h2 id=\"Fields\"><a href=\"#Fields\" class=\"headerlink\" title=\"Fields\"></a>Fields</h2><p><img src=\"https://solana.com/assets/docs/core/accounts/account-type.svg\" alt=\"Account Type\"></p>\n<ul>\n<li><code>data</code>：存储着账户数据的字节数组。当账户为可执行程序时，则存储需要被执行的程序，若不是则存储只读的账户数据。</li>\n<li><code>executable</code>：是否为可执行程序。</li>\n<li><code>lamports</code>：账户余额。</li>\n<li><code>owner</code>：该账户的所有者 <code>public_key</code>（或者叫 <code>program ID</code>）。</li>\n<li><code>rent_epoch</code>：现已被弃用的字段，原设计配合 Solana 租金机制，用于记录定期需要像账户收取的租金。</li>\n</ul>\n<figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">pub</span> <span class=\"keyword\">struct</span> <span class=\"title class_\">Account</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/// lamports in the account</span></span><br><span class=\"line\">    <span class=\"keyword\">pub</span> lamports: <span class=\"type\">u64</span>,</span><br><span class=\"line\">    <span class=\"comment\">/// data held in this account</span></span><br><span class=\"line\">    <span class=\"meta\">#[cfg_attr(feature = <span class=\"string\">&quot;serde&quot;</span>, serde(with = <span class=\"string\">&quot;serde_bytes&quot;</span>))]</span></span><br><span class=\"line\">    <span class=\"keyword\">pub</span> data: <span class=\"type\">Vec</span>&lt;<span class=\"type\">u8</span>&gt;,</span><br><span class=\"line\">    <span class=\"comment\">/// the program that owns this account. If executable, the program that loads this account.</span></span><br><span class=\"line\">    <span class=\"keyword\">pub</span> owner: Pubkey,</span><br><span class=\"line\">    <span class=\"comment\">/// this account&#x27;s data contains a loaded program (and is now read-only)</span></span><br><span class=\"line\">    <span class=\"keyword\">pub</span> executable: <span class=\"type\">bool</span>,</span><br><span class=\"line\">    <span class=\"comment\">/// the epoch at which this account will next owe rent</span></span><br><span class=\"line\">    <span class=\"keyword\">pub</span> rent_epoch: Epoch,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"Lamports\"><a href=\"#Lamports\" class=\"headerlink\" title=\"Lamports\"></a>Lamports</h2><p>Lamport 是 Solana 网络中最小的不可分割的单位，即<strong>最小的原生代币单位</strong>（Lamport 是以计算机科学家 <strong>Leslie Lamport</strong> 的名字命名的，他是分布式系统领域的先驱）。<strong>1 SOL &#x3D; 1,000,000,000 Lamports（即 10 亿 Lamports）</strong>，Solana 上所有费用都是最终以 Lamport 为单位交易的。由于 Lamport 足够的小，所以允许 Solana 网络处理非常小的金额（对外是 SOL），确保计算的<strong>精确性</strong>。</p>\n<h2 id=\"Native-Programs-原生程序\"><a href=\"#Native-Programs-原生程序\" class=\"headerlink\" title=\"Native Programs 原生程序\"></a><a href=\"https://solana.com/zh/docs/core/accounts#native-programs\">Native Programs</a> 原生程序</h2><p>对应上面说的账户类型 —— 原生所有账户，包括了一系列实现了 Solana 网络核心功能的程序，这些程序都被称为原生程序。</p>\n<h2 id=\"System-Program-系统程序\"><a href=\"#System-Program-系统程序\" class=\"headerlink\" title=\"System Program 系统程序\"></a><a href=\"https://solana.com/zh/docs/core/accounts#system-program\">System Program</a> 系统程序</h2><p>所有新账户都归 <strong>System Program</strong> 所有，系统程序负责处理以下一些关键人物：</p>\n<ul>\n<li>创建新账户：只有系统账户可以创建新账户。</li>\n<li>空间分配：设置每个账户，数据字段需要的字节容量。</li>\n<li>分配程序所有权：系统账户一旦创建了一个账户，它能将指定的程序所有者重新分配给不同的程序账户。这就是为什么自定义程序可以拿到系统程序创建的新账户的所有权。</li>\n</ul>\n<p>所有 <strong>钱包账户</strong> 是 Solana 链上最简单的 <strong>系统所属账户</strong>。只有 <strong>系统所属账户</strong> 才能被作为交易的支付方进行支付</p>\n<p><img src=\"https://solana.com/assets/docs/core/accounts/system-account.svg\" alt=\"System Account\"></p>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><h2 id=\"PDA-程序派生账户-Program-Derived-Address\"><a href=\"#PDA-程序派生账户-Program-Derived-Address\" class=\"headerlink\" title=\"PDA 程序派生账户 Program Derived Address\"></a>PDA 程序派生账户 Program Derived Address</h2><p>由某一个程序派生出的账户，一般用于存储 <strong>账户数据或需执行的程序</strong> 所创建。<strong>只有派生父级程序（某个智能合约）才能操作该 PDA 账户</strong>，且没有 <strong>私钥</strong>，所以保证了数据安全性。</p>\n<h2 id=\"项目实战\"><a href=\"#项目实战\" class=\"headerlink\" title=\"项目实战\"></a>项目实战</h2><p>常用命令</p>\n<figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 添加 solana 相关库</span></span><br><span class=\"line\">cargo add solana_client</span><br><span class=\"line\">cargo add solana_client</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 生成新的账户公钥</span></span><br><span class=\"line\">solana-keygen new -o  ~/.config/solana/id2.json</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 配置切换至新账户</span></span><br><span class=\"line\">solana config set --keypair ~/.config/solana/id2.jso</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>转账相关实践</p>\n<figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span> std::<span class=\"type\">str</span>::FromStr;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">use</span> solana_client::rpc_client::RpcClient;</span><br><span class=\"line\"><span class=\"keyword\">use</span> solana_sdk::pubkey::Pubkey;</span><br><span class=\"line\"><span class=\"keyword\">use</span> solana_sdk::signature::read_keypair_file;</span><br><span class=\"line\"><span class=\"keyword\">use</span> solana_sdk::signer::Signer;</span><br><span class=\"line\"><span class=\"keyword\">use</span> solana_sdk::system_instruction;</span><br><span class=\"line\"><span class=\"keyword\">use</span> solana_sdk::transaction::Transaction;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// solana address</span></span><br><span class=\"line\"><span class=\"comment\">// pubkey1xxxxxx：500,000,000,000,000,000 lamports = 500 SOL</span></span><br><span class=\"line\"><span class=\"comment\">// pubkey2xxxxxx</span></span><br><span class=\"line\"><span class=\"keyword\">fn</span> <span class=\"title function_\">main</span>() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 创建solana连接</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">rpc_url</span> = <span class=\"string\">&quot;http://127.0.0.1:8899&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">client</span> = RpcClient::<span class=\"title function_ invoke__\">new</span>(rpc_url);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 指定你要查询的余额账户公钥</span></span><br><span class=\"line\">    <span class=\"comment\">// 接受空投账户</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">account_pubkey</span> = Pubkey::<span class=\"title function_ invoke__\">from_str</span>(<span class=\"string\">&quot;pubkey1xxxxx&quot;</span>).<span class=\"title function_ invoke__\">unwrap</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// sender 发送方：需要用自己的私钥对该笔交易进行签名，以证明交易的合法性</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">sender</span> = <span class=\"title function_ invoke__\">read_keypair_file</span>(<span class=\"string\">&quot;/Users/[username]/.config/solana/id.json&quot;</span>).<span class=\"title function_ invoke__\">expect</span>(<span class=\"string\">&quot;failed&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// receiver 接收方</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">receiver_pubkey</span> = Pubkey::<span class=\"title function_ invoke__\">from_str</span>(<span class=\"string\">&quot;pubkey2xxxxx&quot;</span>).<span class=\"title function_ invoke__\">unwrap</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 空投数量：最小单位 lamports，1 SOL = 1_000_000_000 lamports</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">amount</span> = <span class=\"number\">1_000_000_000</span>; <span class=\"comment\">// 1 SOL</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">match</span> client.<span class=\"title function_ invoke__\">request_airdrop</span>(&amp;account_pubkey, amount) &#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">Ok</span>(signature) =&gt; <span class=\"built_in\">println!</span>(<span class=\"string\">&quot;领取空投成功，交易签名：&#123;&#125;&quot;</span>, signature),</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">Err</span>(e) =&gt; <span class=\"built_in\">eprintln!</span>(<span class=\"string\">&quot;领取空投失败：&#123;&#125;&quot;</span>, e),</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 获取账户余额</span></span><br><span class=\"line\">    <span class=\"keyword\">match</span> client.<span class=\"title function_ invoke__\">get_balance</span>(&amp;account_pubkey) &#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">Ok</span>(balance) =&gt; <span class=\"built_in\">println!</span>(<span class=\"string\">&quot;账户余额：&#123;&#125; lamports&quot;</span>, balance),</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">Err</span>(e) =&gt; <span class=\"built_in\">eprintln!</span>(<span class=\"string\">&quot;获取账户余额失败：&#123;&#125;&quot;</span>, e),</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 创建转账指令</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">transfer_instruction</span> =</span><br><span class=\"line\">        system_instruction::<span class=\"title function_ invoke__\">transfer</span>(&amp;sender.<span class=\"title function_ invoke__\">pubkey</span>(), &amp;receiver_pubkey, amount);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 创建交易：先获取最后一个区块哈希值</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">recent_blockhash</span> = client.<span class=\"title function_ invoke__\">get_latest_blockhash</span>().<span class=\"title function_ invoke__\">unwrap</span>();</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">transaction</span> = Transaction::<span class=\"title function_ invoke__\">new_signed_with_payer</span>(</span><br><span class=\"line\">        &amp;[transfer_instruction],</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">Some</span>(&amp;sender.<span class=\"title function_ invoke__\">pubkey</span>()),</span><br><span class=\"line\">        &amp;[&amp;sender],</span><br><span class=\"line\">        recent_blockhash,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"comment\">// 发送与确认交易</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">result</span> = client.<span class=\"title function_ invoke__\">send_and_confirm_transaction</span>(&amp;transaction);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">match</span> result &#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">Ok</span>(signature) =&gt; <span class=\"built_in\">println!</span>(<span class=\"string\">&quot;发送成功，交易签名：&#123;&#125;&quot;</span>, signature),</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">Err</span>(e) =&gt; <span class=\"built_in\">eprintln!</span>(<span class=\"string\">&quot;交易失败：&#123;&#125;&quot;</span>, e),</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n","text":"Solana Account ModelAccount Types 数据账户，用来存储数据 系统所有账户 程序派生账户（PDA） 程序账户，用来存储可执行程序 ...","permalink":"/post/solana-accounts","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"solana","slug":"solana","count":5,"path":"api/tags/solana.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Solana-Account-Model\"><span class=\"toc-text\">Solana Account Model</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Account-Types\"><span class=\"toc-text\">Account Types</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Key-Points\"><span class=\"toc-text\">Key Points</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Fields\"><span class=\"toc-text\">Fields</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Lamports\"><span class=\"toc-text\">Lamports</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Native-Programs-%E5%8E%9F%E7%94%9F%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">Native Programs 原生程序</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#System-Program-%E7%B3%BB%E7%BB%9F%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">System Program 系统程序</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\"></span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PDA-%E7%A8%8B%E5%BA%8F%E6%B4%BE%E7%94%9F%E8%B4%A6%E6%88%B7-Program-Derived-Address\"><span class=\"toc-text\">PDA 程序派生账户 Program Derived Address</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98\"><span class=\"toc-text\">项目实战</span></a></li></ol>","author":{"name":"Marnie","slug":"blog-author","avatar":"/images/favicon.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"solana-token","uid":"862a15ca9d7f5ce192b03b7aed288867","slug":"solana-token","date":"2025-03-14T05:09:58.000Z","updated":"2025-03-15T03:24:17.194Z","comments":true,"path":"api/articles/solana-token.json","keywords":"","cover":[],"text":"Solana 上的代币代币是代表对各种资产所有权的数字资产。代币化使得财产权的数字化成为可能，是管理「可替代和不可替代资产」的基本组成部分。 可替代代币代表同类...","permalink":"/post/solana-token","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"solana","slug":"solana","count":5,"path":"api/tags/solana.json"}],"author":{"name":"Marnie","slug":"blog-author","avatar":"/images/favicon.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"solana-development","uid":"4924e3fdb08216102217b9102664f654","slug":"solana-development","date":"2025-02-28T07:40:06.000Z","updated":"2025-03-09T10:51:23.625Z","comments":true,"path":"api/articles/solana-development.json","keywords":"","cover":[],"text":"Solana 合约开发添加 Solana 智能合约依赖 1cargo add solana-program 修改 Cargo.toml 添加 [lib] [li...","permalink":"/post/solana-development","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"solana","slug":"solana","count":5,"path":"api/tags/solana.json"}],"author":{"name":"Marnie","slug":"blog-author","avatar":"/images/favicon.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}